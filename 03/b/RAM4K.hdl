// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux8Way(in=load ,sel=address[0..2] ,a=a0 ,b=b1 ,c=c2 ,d=d3 ,e=e4 ,f=f5 ,g=g6 ,h=h7 );

RAM512(in=in ,load=a0 ,address=address[3..11] ,out=a );
RAM512(in=in ,load=b1 ,address=address[3..11] ,out=b);
RAM512(in=in ,load=c2 ,address=address[3..11] ,out=c );
RAM512(in=in ,load=d3 ,address=address[3..11] ,out=d );
RAM512(in=in ,load=e4 ,address=address[3..11] ,out=e );
RAM512(in=in ,load=f5 ,address=address[3..11] ,out=f );
RAM512(in=in ,load=g6 ,address=address[3..11] ,out=g );
RAM512(in=in ,load=h7 ,address=address[3..11] ,out=h );

Mux8Way16(a=a ,b=b ,c=c ,d=d ,e=e ,f=f ,g=g ,h=h ,sel=address[0..2] ,out=out );
}

